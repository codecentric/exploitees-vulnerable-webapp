resource "aws_iam_user" "workshop_users" {
  count = var.exploitees_user_count
  name = format("workshop_user_%02.0f", count.index + 1)
  force_destroy = true
}

resource "aws_iam_group" "cloud9_users" {
  name = "cloud9_users"
}

resource "aws_iam_group_membership" "cloud9_users_members" {
  group = aws_iam_group.cloud9_users.name
  users = [for u in aws_iam_user.workshop_users : u.name]
  name  = "cloud9_users_member"
}

resource "aws_iam_group_policy_attachment" "cloud9_user" {
  for_each = toset([
    "arn:aws:iam::aws:policy/AWSCloud9User",
    "arn:aws:iam::aws:policy/IAMUserChangePassword"
  ])
  group      = aws_iam_group.cloud9_users.name
  policy_arn = each.key
}

resource "aws_iam_user_login_profile" "workshop_user" {
  for_each = toset([for u in aws_iam_user.workshop_users : u.name])
  user                    = each.key
  password_length         = 20
  password_reset_required = false
}

output "cloud9_passwords" {
  value = {for workshop_user in aws_iam_user_login_profile.workshop_user : workshop_user.user => workshop_user.password}
}