resource "aws_instance" "webgoat" {
  ami                    = "ami-09439f09c55136ecf" # Amazon Linux 2
  key_name               = aws_key_pair.webgoat_generated_key.key_name
  instance_type          = "t2.micro"
  vpc_security_group_ids = [aws_security_group.allow_http_8080.id]
  subnet_id              = module.webgoat-vpc.public_subnets[0]
  user_data              = <<-EOT
    #!/bin/bash
    sudo yum install java-17-amazon-corretto-headless -y
    wget -O /tmp/webgoat.jar "https://github.com/WebGoat/WebGoat/releases/download/v${var.webgoat_version}/webgoat-${var.webgoat_version}.jar"
    java -Dfile.encoding=UTF-8 -Dserver.address=0.0.0.0 -jar /tmp/webgoat.jar
    EOT
}

resource "aws_security_group" "allow_http_8080" {
  name        = "allow_http_8080_from_alb"
  description = "Allow inbound HTTP traffic on 8080 from ALB SG"
  vpc_id      = module.webgoat-vpc.vpc_id

  ingress {
    description     = "HTTP 8080 from ALB"
    from_port       = 8080
    to_port         = 8080
    protocol        = "tcp"
    security_groups = [aws_security_group.alb.id]
  }

  egress {
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
  }

  lifecycle {
    # Necessary if changing 'name' or 'name_prefix' properties.
    create_before_destroy = true
  }
}

resource "tls_private_key" "webgoat" {
  algorithm = "RSA"
  rsa_bits  = 4096
}

resource "aws_key_pair" "webgoat_generated_key" {
  key_name   = "webgoat"
  public_key = tls_private_key.webgoat.public_key_openssh
}

output "private_key" {
  value     = tls_private_key.webgoat.private_key_pem
  sensitive = true
}
