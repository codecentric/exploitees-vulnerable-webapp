terraform {
  required_providers {
    name = {
      source  = "hashicorp/aws"
      version = "4.14.0"
    }
  }
}

provider "aws" {
  region = local.region
}

variable "domain_name" {
  type = string
}

variable "vpc_cidr_block" {
  type    = string
  default = "10.201.0.0/16"
}

variable "webgoat_version" {
  type    = string
  default = "8.2.2"
}

locals {
  region               = "eu-central-1"
  codecentric_vpn_cidr = "87.191.39.154/32"
}

resource "aws_instance" "webgoat" {
  ami                    = "ami-09439f09c55136ecf" # Amazon Linux 2
  instance_type          = "t2.micro"
  vpc_security_group_ids = [aws_security_group.allow_http_8080.id]
  subnet_id              = module.vpc.public_subnets[0]
  user_data              = <<-EOT
    #!/bin/bash
    sudo yum install java-17-amazon-corretto-headless -y
    wget -O /tmp/webgoat.jar "https://github.com/WebGoat/WebGoat/releases/download/v${var.webgoat_version}/webgoat-server-${var.webgoat_version}.jar"
    java -Dfile.encoding=UTF-8 -Dserver.port=8080 -Dserver.address=0.0.0.0 -jar /tmp/webgoat.jar
    EOT
}

module "vpc" {
  source = "terraform-aws-modules/vpc/aws"

  name = "webgoat"
  cidr = "10.201.0.0/16"

  azs            = ["${local.region}a", "${local.region}b", "${local.region}c"]
  public_subnets = ["10.201.1.0/24"]

  enable_nat_gateway = false
  enable_vpn_gateway = false

  vpc_tags = {
    Name = "webgoat"
  }
}

resource "aws_security_group" "allow_http_8080" {
  name        = "allow_http_8080"
  description = "Allow inbound HTTP traffic on 8080"
  vpc_id      = module.vpc.vpc_id

  ingress {
    description = "HTTP 8080 on VPN"
    from_port   = 8080
    to_port     = 8080
    protocol    = "tcp"
    cidr_blocks = ["${local.codecentric_vpn_cidr}"]
  }

  egress {
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
  }
}
