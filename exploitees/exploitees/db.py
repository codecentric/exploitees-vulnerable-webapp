import click
from flask import g, current_app
import sqlite3

from werkzeug.security import generate_password_hash


def get_db_connection():
    if 'db' not in g:
        g.db = sqlite3.connect(
            current_app.config['DATABASE'],
            detect_types=sqlite3.PARSE_DECLTYPES
        )
        g.db.row_factory = sqlite3.Row

    return g.db


def close_db(e=None):
    db = g.pop('db', None)

    if db is not None:
        db.close()


def init_db():
    db = get_db_connection()
    with current_app.open_resource('schema.sql') as f:
        db.executescript(f.read().decode('utf8'))
    cursor = db.cursor()
    cursor.execute('INSERT INTO employees (name, occupation, salary) VALUES (?,?,?)',
                   ('Morgan', 'Manager', 100_000))
    cursor.execute('INSERT INTO users (username, password_hash) VALUES (?,?)',
                   ('admin', generate_password_hash('secret')))
    # [('admin', pbkdf2_sha512.hash('secret')),
    # ('user', pbkdf2_sha512.hash('easy'))])


@click.command('init-db')
def init_db_command():
    """Clear the existing data and create new tables."""
    init_db()
    click.echo('Initialized the database.')


def init_app(app):
    app.teardown_appcontext(close_db)
    app.cli.add_command(init_db_command)
